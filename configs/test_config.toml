name = "Pageshelf"
description = "A free and open source Pages system, written in the Rust language."
# URLs in which this can be accessed (built-in pages, or using subdirectories (/user/repo(:branch))
urls = "http://localhost"
# If present, pages can be accessed via wildcard subdomains of these URLs
#pages_urls = ["http://localhost/"]
# Default user to infer if no user is specified
default_user = "mrrp"
# Port to serve pages over (HTTP)
port = 8080
# Whether or not to allow custom domains
# If enabled, create a ".domain" file in the branch the page is being served from
# Each line in the domain file will be a domain that it can be accessed from
# (It will automatically determine what page to serve)
allow_domains = false

# Optional
[ui]
# Optional: Specifies a directory that contains asset files
# These files can use Jinja templates
# Built in files will take priority
# TODO: Implement
#overrides = "./templates"

[upstream]
# Optional: Defaults to Forgejo
type = "forgejo"
# Optional: Determines how it should get data from the upstream
# Leave blank for automatic
method = "direct"
# Optional: Identifies where to find the repositories for the pages
url = "https://git.smgames.club"
# Optional: Specifies what branch should be the default when accessing a page
# Leave blank for "page"
default_branch = "pages"
# Optional: Specifies what branches are allowed to be shown
# If not specified, any branch will be accepted
branches = ["pages"]
poll_interval = 60
#token = "my-auth-token"

[security]
# TODO: Implement
# Security measures
# Regex based filters for pages
#whitelist = { owner = "*", repo = "*", file = "*" }
#blacklist = { owner = "*", repo = "*", file = "*" }
# Whether or not to show private repos
#show_private = false

[cache]
enabled = true
port = 6379
address = "localhost"
#ttl=400 